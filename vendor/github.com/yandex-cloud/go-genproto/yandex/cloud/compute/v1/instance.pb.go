// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/compute/v1/instance.proto

package compute // import "github.com/yandex-cloud/go-genproto/yandex/cloud/compute/v1"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type IpVersion int32

const (
	IpVersion_IP_VERSION_UNSPECIFIED IpVersion = 0
	// IPv4 address, for example 192.0.2.235.
	IpVersion_IPV4 IpVersion = 1
	// IPv6 address, for example 2001:0db8:85a3:0000:0000:8a2e:0370:7334.
	IpVersion_IPV6 IpVersion = 2
)

var IpVersion_name = map[int32]string{
	0: "IP_VERSION_UNSPECIFIED",
	1: "IPV4",
	2: "IPV6",
}
var IpVersion_value = map[string]int32{
	"IP_VERSION_UNSPECIFIED": 0,
	"IPV4": 1,
	"IPV6": 2,
}

func (x IpVersion) String() string {
	return proto.EnumName(IpVersion_name, int32(x))
}
func (IpVersion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_instance_7218a503fdcdbd29, []int{0}
}

type Instance_Status int32

const (
	Instance_STATUS_UNSPECIFIED Instance_Status = 0
	// Instance is waiting for resources to be allocated.
	Instance_PROVISIONING Instance_Status = 1
	// Instance is running normally.
	Instance_RUNNING Instance_Status = 2
	// Instance is being stopped.
	Instance_STOPPING Instance_Status = 3
	// Instance stopped.
	Instance_STOPPED Instance_Status = 4
	// Instance is being started.
	Instance_STARTING Instance_Status = 5
	// Instance is being restarted.
	Instance_RESTARTING Instance_Status = 6
	// Instance is being updated.
	Instance_UPDATING Instance_Status = 7
	// Instance encountered a problem and cannot operate.
	Instance_ERROR Instance_Status = 8
	// Instance crashed and will be restarted automatically.
	Instance_CRASHED Instance_Status = 9
	// Instance is being deleted.
	Instance_DELETING Instance_Status = 10
)

var Instance_Status_name = map[int32]string{
	0:  "STATUS_UNSPECIFIED",
	1:  "PROVISIONING",
	2:  "RUNNING",
	3:  "STOPPING",
	4:  "STOPPED",
	5:  "STARTING",
	6:  "RESTARTING",
	7:  "UPDATING",
	8:  "ERROR",
	9:  "CRASHED",
	10: "DELETING",
}
var Instance_Status_value = map[string]int32{
	"STATUS_UNSPECIFIED": 0,
	"PROVISIONING":       1,
	"RUNNING":            2,
	"STOPPING":           3,
	"STOPPED":            4,
	"STARTING":           5,
	"RESTARTING":         6,
	"UPDATING":           7,
	"ERROR":              8,
	"CRASHED":            9,
	"DELETING":           10,
}

func (x Instance_Status) String() string {
	return proto.EnumName(Instance_Status_name, int32(x))
}
func (Instance_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_instance_7218a503fdcdbd29, []int{0, 0}
}

type AttachedDisk_Mode int32

const (
	AttachedDisk_MODE_UNSPECIFIED AttachedDisk_Mode = 0
	// Read-only access.
	AttachedDisk_READ_ONLY AttachedDisk_Mode = 1
	// Read/Write access.
	AttachedDisk_READ_WRITE AttachedDisk_Mode = 2
)

var AttachedDisk_Mode_name = map[int32]string{
	0: "MODE_UNSPECIFIED",
	1: "READ_ONLY",
	2: "READ_WRITE",
}
var AttachedDisk_Mode_value = map[string]int32{
	"MODE_UNSPECIFIED": 0,
	"READ_ONLY":        1,
	"READ_WRITE":       2,
}

func (x AttachedDisk_Mode) String() string {
	return proto.EnumName(AttachedDisk_Mode_name, int32(x))
}
func (AttachedDisk_Mode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_instance_7218a503fdcdbd29, []int{2, 0}
}

// An Instance resource. For more information, see [Instances](/docs/compute/concepts/vm).
type Instance struct {
	// ID of the instance.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the folder that the instance belongs to.
	FolderId string `protobuf:"bytes,2,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Name of the instance. 1-63 characters long.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the instance. 0-256 characters long.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Resource labels as `` key:value `` pairs. Maximum of 64 per resource.
	Labels map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// ID of the availability zone where the instance resides.
	ZoneId string `protobuf:"bytes,7,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	// ID of the hardware platform configuration for the instance.
	PlatformId string `protobuf:"bytes,8,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	// Computing resources of the instance such as the amount of memory and number of cores.
	Resources *Resources `protobuf:"bytes,9,opt,name=resources,proto3" json:"resources,omitempty"`
	// Status of the instance.
	Status Instance_Status `protobuf:"varint,10,opt,name=status,proto3,enum=yandex.cloud.compute.v1.Instance_Status" json:"status,omitempty"`
	// The metadata key/value pairs assigned to this instance. This includes custom metadata and predefined keys.
	//
	// For example, you may use the metadata in order to provide your public SSH key to the instance.
	// For more information, see [Metadata](/docs/compute/concepts/vm-metadata).
	Metadata map[string]string `protobuf:"bytes,11,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Boot disk that is attached to the instance.
	BootDisk *AttachedDisk `protobuf:"bytes,12,opt,name=boot_disk,json=bootDisk,proto3" json:"boot_disk,omitempty"`
	// Array of secondary disks that are attached to the instance.
	SecondaryDisks []*AttachedDisk `protobuf:"bytes,13,rep,name=secondary_disks,json=secondaryDisks,proto3" json:"secondary_disks,omitempty"`
	// Array of network interfaces that are attached to the instance.
	NetworkInterfaces []*NetworkInterface `protobuf:"bytes,14,rep,name=network_interfaces,json=networkInterfaces,proto3" json:"network_interfaces,omitempty"`
	// A domain name of the instance. FQDN is defined by the server
	// in the format `<hostname>.<region_id>.internal` when the instance is created.
	// If the hostname were not specified when the instance was created, FQDN would be `<id>.auto.internal`.
	Fqdn                 string   `protobuf:"bytes,16,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Instance) Reset()         { *m = Instance{} }
func (m *Instance) String() string { return proto.CompactTextString(m) }
func (*Instance) ProtoMessage()    {}
func (*Instance) Descriptor() ([]byte, []int) {
	return fileDescriptor_instance_7218a503fdcdbd29, []int{0}
}
func (m *Instance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Instance.Unmarshal(m, b)
}
func (m *Instance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Instance.Marshal(b, m, deterministic)
}
func (dst *Instance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Instance.Merge(dst, src)
}
func (m *Instance) XXX_Size() int {
	return xxx_messageInfo_Instance.Size(m)
}
func (m *Instance) XXX_DiscardUnknown() {
	xxx_messageInfo_Instance.DiscardUnknown(m)
}

var xxx_messageInfo_Instance proto.InternalMessageInfo

func (m *Instance) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Instance) GetFolderId() string {
	if m != nil {
		return m.FolderId
	}
	return ""
}

func (m *Instance) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Instance) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Instance) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Instance) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Instance) GetZoneId() string {
	if m != nil {
		return m.ZoneId
	}
	return ""
}

func (m *Instance) GetPlatformId() string {
	if m != nil {
		return m.PlatformId
	}
	return ""
}

func (m *Instance) GetResources() *Resources {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *Instance) GetStatus() Instance_Status {
	if m != nil {
		return m.Status
	}
	return Instance_STATUS_UNSPECIFIED
}

func (m *Instance) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Instance) GetBootDisk() *AttachedDisk {
	if m != nil {
		return m.BootDisk
	}
	return nil
}

func (m *Instance) GetSecondaryDisks() []*AttachedDisk {
	if m != nil {
		return m.SecondaryDisks
	}
	return nil
}

func (m *Instance) GetNetworkInterfaces() []*NetworkInterface {
	if m != nil {
		return m.NetworkInterfaces
	}
	return nil
}

func (m *Instance) GetFqdn() string {
	if m != nil {
		return m.Fqdn
	}
	return ""
}

type Resources struct {
	// The amount of memory available to the instance, specified in bytes.
	Memory int64 `protobuf:"varint,1,opt,name=memory,proto3" json:"memory,omitempty"`
	// The number of cores available to the instance.
	Cores int64 `protobuf:"varint,2,opt,name=cores,proto3" json:"cores,omitempty"`
	// Baseline level of CPU performance with the ability to burst performance above that baseline level.
	// This field sets baseline performance for each core.
	CoreFraction         int64    `protobuf:"varint,3,opt,name=core_fraction,json=coreFraction,proto3" json:"core_fraction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Resources) Reset()         { *m = Resources{} }
func (m *Resources) String() string { return proto.CompactTextString(m) }
func (*Resources) ProtoMessage()    {}
func (*Resources) Descriptor() ([]byte, []int) {
	return fileDescriptor_instance_7218a503fdcdbd29, []int{1}
}
func (m *Resources) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resources.Unmarshal(m, b)
}
func (m *Resources) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resources.Marshal(b, m, deterministic)
}
func (dst *Resources) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resources.Merge(dst, src)
}
func (m *Resources) XXX_Size() int {
	return xxx_messageInfo_Resources.Size(m)
}
func (m *Resources) XXX_DiscardUnknown() {
	xxx_messageInfo_Resources.DiscardUnknown(m)
}

var xxx_messageInfo_Resources proto.InternalMessageInfo

func (m *Resources) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *Resources) GetCores() int64 {
	if m != nil {
		return m.Cores
	}
	return 0
}

func (m *Resources) GetCoreFraction() int64 {
	if m != nil {
		return m.CoreFraction
	}
	return 0
}

type AttachedDisk struct {
	// Access mode to the Disk resource.
	Mode AttachedDisk_Mode `protobuf:"varint,1,opt,name=mode,proto3,enum=yandex.cloud.compute.v1.AttachedDisk_Mode" json:"mode,omitempty"`
	// Serial number that is reflected into the /dev/disk/by-id/ tree
	// of a Linux operating system running within the instance.
	//
	// This value can be used to reference the device for mounting, resizing, and so on, from within the instance.
	DeviceName string `protobuf:"bytes,2,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	// Specifies whether the disk will be auto-deleted when the instance is deleted.
	AutoDelete bool `protobuf:"varint,3,opt,name=auto_delete,json=autoDelete,proto3" json:"auto_delete,omitempty"`
	// ID of the disk that is attached to the instance.
	DiskId               string   `protobuf:"bytes,4,opt,name=disk_id,json=diskId,proto3" json:"disk_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttachedDisk) Reset()         { *m = AttachedDisk{} }
func (m *AttachedDisk) String() string { return proto.CompactTextString(m) }
func (*AttachedDisk) ProtoMessage()    {}
func (*AttachedDisk) Descriptor() ([]byte, []int) {
	return fileDescriptor_instance_7218a503fdcdbd29, []int{2}
}
func (m *AttachedDisk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttachedDisk.Unmarshal(m, b)
}
func (m *AttachedDisk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttachedDisk.Marshal(b, m, deterministic)
}
func (dst *AttachedDisk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachedDisk.Merge(dst, src)
}
func (m *AttachedDisk) XXX_Size() int {
	return xxx_messageInfo_AttachedDisk.Size(m)
}
func (m *AttachedDisk) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachedDisk.DiscardUnknown(m)
}

var xxx_messageInfo_AttachedDisk proto.InternalMessageInfo

func (m *AttachedDisk) GetMode() AttachedDisk_Mode {
	if m != nil {
		return m.Mode
	}
	return AttachedDisk_MODE_UNSPECIFIED
}

func (m *AttachedDisk) GetDeviceName() string {
	if m != nil {
		return m.DeviceName
	}
	return ""
}

func (m *AttachedDisk) GetAutoDelete() bool {
	if m != nil {
		return m.AutoDelete
	}
	return false
}

func (m *AttachedDisk) GetDiskId() string {
	if m != nil {
		return m.DiskId
	}
	return ""
}

type NetworkInterface struct {
	// The index of the network interface, generated by the server, 0,1,2... etc.
	// Currently only one network interface is supported per instance.
	Index string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	// MAC address that is assigned to the network interface.
	MacAddress string `protobuf:"bytes,2,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	// ID of the subnet.
	SubnetId string `protobuf:"bytes,3,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	// Primary IPv4 address that is assigned to the instance for this network interface.
	PrimaryV4Address *PrimaryAddress `protobuf:"bytes,4,opt,name=primary_v4_address,json=primaryV4Address,proto3" json:"primary_v4_address,omitempty"`
	// Primary IPv6 address that is assigned to the instance for this network interface. IPv6 not available yet.
	PrimaryV6Address     *PrimaryAddress `protobuf:"bytes,5,opt,name=primary_v6_address,json=primaryV6Address,proto3" json:"primary_v6_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *NetworkInterface) Reset()         { *m = NetworkInterface{} }
func (m *NetworkInterface) String() string { return proto.CompactTextString(m) }
func (*NetworkInterface) ProtoMessage()    {}
func (*NetworkInterface) Descriptor() ([]byte, []int) {
	return fileDescriptor_instance_7218a503fdcdbd29, []int{3}
}
func (m *NetworkInterface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkInterface.Unmarshal(m, b)
}
func (m *NetworkInterface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkInterface.Marshal(b, m, deterministic)
}
func (dst *NetworkInterface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInterface.Merge(dst, src)
}
func (m *NetworkInterface) XXX_Size() int {
	return xxx_messageInfo_NetworkInterface.Size(m)
}
func (m *NetworkInterface) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInterface.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInterface proto.InternalMessageInfo

func (m *NetworkInterface) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *NetworkInterface) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *NetworkInterface) GetSubnetId() string {
	if m != nil {
		return m.SubnetId
	}
	return ""
}

func (m *NetworkInterface) GetPrimaryV4Address() *PrimaryAddress {
	if m != nil {
		return m.PrimaryV4Address
	}
	return nil
}

func (m *NetworkInterface) GetPrimaryV6Address() *PrimaryAddress {
	if m != nil {
		return m.PrimaryV6Address
	}
	return nil
}

type PrimaryAddress struct {
	// An IPv4 internal network address that is assigned to the instance for this network interface.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// One-to-one NAT configuration. If missing, NAT has not been set up.
	OneToOneNat          *OneToOneNat `protobuf:"bytes,2,opt,name=one_to_one_nat,json=oneToOneNat,proto3" json:"one_to_one_nat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PrimaryAddress) Reset()         { *m = PrimaryAddress{} }
func (m *PrimaryAddress) String() string { return proto.CompactTextString(m) }
func (*PrimaryAddress) ProtoMessage()    {}
func (*PrimaryAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_instance_7218a503fdcdbd29, []int{4}
}
func (m *PrimaryAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimaryAddress.Unmarshal(m, b)
}
func (m *PrimaryAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimaryAddress.Marshal(b, m, deterministic)
}
func (dst *PrimaryAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimaryAddress.Merge(dst, src)
}
func (m *PrimaryAddress) XXX_Size() int {
	return xxx_messageInfo_PrimaryAddress.Size(m)
}
func (m *PrimaryAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimaryAddress.DiscardUnknown(m)
}

var xxx_messageInfo_PrimaryAddress proto.InternalMessageInfo

func (m *PrimaryAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *PrimaryAddress) GetOneToOneNat() *OneToOneNat {
	if m != nil {
		return m.OneToOneNat
	}
	return nil
}

type OneToOneNat struct {
	// An external IP address associated with this instance.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// IP version for the external IP address.
	IpVersion            IpVersion `protobuf:"varint,2,opt,name=ip_version,json=ipVersion,proto3,enum=yandex.cloud.compute.v1.IpVersion" json:"ip_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *OneToOneNat) Reset()         { *m = OneToOneNat{} }
func (m *OneToOneNat) String() string { return proto.CompactTextString(m) }
func (*OneToOneNat) ProtoMessage()    {}
func (*OneToOneNat) Descriptor() ([]byte, []int) {
	return fileDescriptor_instance_7218a503fdcdbd29, []int{5}
}
func (m *OneToOneNat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OneToOneNat.Unmarshal(m, b)
}
func (m *OneToOneNat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OneToOneNat.Marshal(b, m, deterministic)
}
func (dst *OneToOneNat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OneToOneNat.Merge(dst, src)
}
func (m *OneToOneNat) XXX_Size() int {
	return xxx_messageInfo_OneToOneNat.Size(m)
}
func (m *OneToOneNat) XXX_DiscardUnknown() {
	xxx_messageInfo_OneToOneNat.DiscardUnknown(m)
}

var xxx_messageInfo_OneToOneNat proto.InternalMessageInfo

func (m *OneToOneNat) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *OneToOneNat) GetIpVersion() IpVersion {
	if m != nil {
		return m.IpVersion
	}
	return IpVersion_IP_VERSION_UNSPECIFIED
}

func init() {
	proto.RegisterType((*Instance)(nil), "yandex.cloud.compute.v1.Instance")
	proto.RegisterMapType((map[string]string)(nil), "yandex.cloud.compute.v1.Instance.LabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "yandex.cloud.compute.v1.Instance.MetadataEntry")
	proto.RegisterType((*Resources)(nil), "yandex.cloud.compute.v1.Resources")
	proto.RegisterType((*AttachedDisk)(nil), "yandex.cloud.compute.v1.AttachedDisk")
	proto.RegisterType((*NetworkInterface)(nil), "yandex.cloud.compute.v1.NetworkInterface")
	proto.RegisterType((*PrimaryAddress)(nil), "yandex.cloud.compute.v1.PrimaryAddress")
	proto.RegisterType((*OneToOneNat)(nil), "yandex.cloud.compute.v1.OneToOneNat")
	proto.RegisterEnum("yandex.cloud.compute.v1.IpVersion", IpVersion_name, IpVersion_value)
	proto.RegisterEnum("yandex.cloud.compute.v1.Instance_Status", Instance_Status_name, Instance_Status_value)
	proto.RegisterEnum("yandex.cloud.compute.v1.AttachedDisk_Mode", AttachedDisk_Mode_name, AttachedDisk_Mode_value)
}

func init() {
	proto.RegisterFile("yandex/cloud/compute/v1/instance.proto", fileDescriptor_instance_7218a503fdcdbd29)
}

var fileDescriptor_instance_7218a503fdcdbd29 = []byte{
	// 1006 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xdb, 0x6e, 0xdb, 0x46,
	0x13, 0xfe, 0x75, 0xb0, 0x4c, 0x0e, 0x6d, 0xfd, 0xec, 0x22, 0x70, 0x08, 0xf7, 0xc2, 0x86, 0x7a,
	0x72, 0x03, 0x98, 0x42, 0x5c, 0xc3, 0x68, 0x6a, 0xa0, 0x08, 0x63, 0x32, 0x2d, 0x51, 0x5b, 0x12,
	0x56, 0xb2, 0x7b, 0xb8, 0x28, 0xb1, 0xe2, 0xae, 0x1c, 0xd6, 0x22, 0x57, 0x25, 0x97, 0x6a, 0xdd,
	0xe7, 0xe8, 0x1b, 0xf4, 0xb6, 0xcf, 0xd5, 0xe7, 0x28, 0x76, 0x97, 0x54, 0x14, 0x03, 0x6a, 0xd2,
	0x5e, 0x79, 0xbf, 0x6f, 0x66, 0xbe, 0xd9, 0x19, 0xcd, 0x8e, 0x09, 0x1f, 0xdf, 0x93, 0x8c, 0xb2,
	0x5f, 0xfb, 0xf1, 0x9c, 0x97, 0xb4, 0x1f, 0xf3, 0x74, 0x51, 0x0a, 0xd6, 0x5f, 0x3e, 0xed, 0x27,
	0x59, 0x21, 0x48, 0x16, 0x33, 0x77, 0x91, 0x73, 0xc1, 0xd1, 0x63, 0xed, 0xe7, 0x2a, 0x3f, 0xb7,
	0xf2, 0x73, 0x97, 0x4f, 0xf7, 0x0f, 0x6e, 0x39, 0xbf, 0x9d, 0xb3, 0xbe, 0x72, 0x9b, 0x96, 0xb3,
	0xbe, 0x48, 0x52, 0x56, 0x08, 0x92, 0x2e, 0x74, 0x64, 0xef, 0x0f, 0x03, 0x8c, 0xb0, 0x12, 0x43,
	0x5d, 0x68, 0x26, 0xd4, 0x69, 0x1c, 0x36, 0x8e, 0x4c, 0xdc, 0x4c, 0x28, 0x7a, 0x1f, 0xcc, 0x19,
	0x9f, 0x53, 0x96, 0x47, 0x09, 0x75, 0x9a, 0x8a, 0x36, 0x34, 0x11, 0x52, 0xf4, 0x0c, 0x20, 0xce,
	0x19, 0x11, 0x8c, 0x46, 0x44, 0x38, 0xad, 0xc3, 0xc6, 0x91, 0x75, 0xb2, 0xef, 0xea, 0x7c, 0x6e,
	0x9d, 0xcf, 0x9d, 0xd4, 0xf9, 0xb0, 0x59, 0x79, 0x7b, 0x02, 0x21, 0x68, 0x67, 0x24, 0x65, 0x4e,
	0x5b, 0x49, 0xaa, 0x33, 0x3a, 0x04, 0x8b, 0xb2, 0x22, 0xce, 0x93, 0x85, 0x48, 0x78, 0xe6, 0x6c,
	0x29, 0xd3, 0x3a, 0x85, 0x02, 0xe8, 0xcc, 0xc9, 0x94, 0xcd, 0x0b, 0xa7, 0x73, 0xd8, 0x3a, 0xb2,
	0x4e, 0x8e, 0xdd, 0x0d, 0x55, 0xbb, 0x75, 0x41, 0xee, 0xa5, 0xf2, 0x0f, 0x32, 0x91, 0xdf, 0xe3,
	0x2a, 0x18, 0x3d, 0x86, 0xed, 0xdf, 0x78, 0xc6, 0x64, 0x49, 0xdb, 0x2a, 0x49, 0x47, 0xc2, 0x90,
	0xa2, 0x03, 0xb0, 0x16, 0x73, 0x22, 0x66, 0x3c, 0x4f, 0xa5, 0xd1, 0x50, 0x46, 0xa8, 0xa9, 0x90,
	0xa2, 0xe7, 0x60, 0xe6, 0xac, 0xe0, 0x65, 0x1e, 0xb3, 0xc2, 0x31, 0x55, 0xc1, 0xbd, 0x8d, 0x77,
	0xc0, 0xb5, 0x27, 0x7e, 0x1d, 0x84, 0x9e, 0x43, 0xa7, 0x10, 0x44, 0x94, 0x85, 0x03, 0x87, 0x8d,
	0xa3, 0xee, 0xc9, 0xd1, 0xdb, 0x4b, 0x18, 0x2b, 0x7f, 0x5c, 0xc5, 0xa1, 0x6f, 0xc0, 0x48, 0x99,
	0x20, 0x94, 0x08, 0xe2, 0x58, 0xaa, 0x0d, 0xfd, 0xb7, 0x6b, 0x5c, 0x55, 0x11, 0xba, 0x11, 0x2b,
	0x01, 0xf4, 0x02, 0xcc, 0x29, 0xe7, 0x22, 0xa2, 0x49, 0x71, 0xe7, 0xec, 0xa8, 0x82, 0x3e, 0xda,
	0xa8, 0xe6, 0x09, 0x41, 0xe2, 0x57, 0x8c, 0xfa, 0x49, 0x71, 0x87, 0x0d, 0x19, 0x27, 0x4f, 0x68,
	0x00, 0xff, 0x2f, 0x58, 0xcc, 0x33, 0x4a, 0xf2, 0x7b, 0x25, 0x54, 0x38, 0xbb, 0xea, 0x5e, 0xef,
	0xa8, 0xd4, 0x5d, 0x45, 0x4b, 0x58, 0xa0, 0xef, 0x00, 0x65, 0x4c, 0xfc, 0xc2, 0xf3, 0xbb, 0x28,
	0xc9, 0x04, 0xcb, 0x67, 0x44, 0x76, 0xbb, 0xab, 0x24, 0x3f, 0xdd, 0x28, 0x39, 0xd0, 0x21, 0x61,
	0x1d, 0x81, 0xdf, 0xcb, 0x1e, 0x30, 0x85, 0x9c, 0xba, 0xd9, 0xcf, 0x34, 0x73, 0x6c, 0x3d, 0x75,
	0xf2, 0xbc, 0xff, 0x0c, 0xac, 0xb5, 0x19, 0x41, 0x36, 0xb4, 0xee, 0xd8, 0x7d, 0xf5, 0x02, 0xe4,
	0x11, 0x3d, 0x82, 0xad, 0x25, 0x99, 0x97, 0xac, 0x1a, 0x7f, 0x0d, 0xbe, 0x68, 0x7e, 0xde, 0xd8,
	0x3f, 0x87, 0xdd, 0x37, 0xfa, 0xfa, 0x6f, 0x82, 0x7b, 0x7f, 0x36, 0xa0, 0xa3, 0x7f, 0x59, 0xb4,
	0x07, 0x68, 0x3c, 0xf1, 0x26, 0xd7, 0xe3, 0xe8, 0x7a, 0x30, 0x1e, 0x05, 0x17, 0xe1, 0xcb, 0x30,
	0xf0, 0xed, 0xff, 0x21, 0x1b, 0x76, 0x46, 0x78, 0x78, 0x13, 0x8e, 0xc3, 0xe1, 0x20, 0x1c, 0x7c,
	0x65, 0x37, 0x90, 0x05, 0xdb, 0xf8, 0x7a, 0xa0, 0x40, 0x13, 0xed, 0x80, 0x31, 0x9e, 0x0c, 0x47,
	0x23, 0x89, 0x5a, 0xd2, 0xa4, 0x50, 0xe0, 0xdb, 0x6d, 0x6d, 0xf2, 0xf0, 0x44, 0x9a, 0xb6, 0x50,
	0x17, 0x00, 0x07, 0x2b, 0xdc, 0x91, 0xd6, 0xeb, 0x91, 0xef, 0x29, 0xb4, 0x8d, 0x4c, 0xd8, 0x0a,
	0x30, 0x1e, 0x62, 0xdb, 0x90, 0x1a, 0x17, 0xd8, 0x1b, 0x7f, 0x1d, 0xf8, 0xb6, 0x29, 0xbd, 0xfc,
	0xe0, 0x32, 0x50, 0x5e, 0xd0, 0xfb, 0x11, 0xcc, 0xd5, 0x3c, 0xa3, 0x3d, 0xe8, 0xa4, 0x2c, 0xe5,
	0xb9, 0x2e, 0xb5, 0x85, 0x2b, 0x24, 0xab, 0x8d, 0x79, 0xce, 0x0a, 0x55, 0x6d, 0x0b, 0x6b, 0x80,
	0x3e, 0x80, 0x5d, 0x79, 0x88, 0x66, 0x39, 0x89, 0xd5, 0xcb, 0x6e, 0x29, 0xeb, 0x8e, 0x24, 0x5f,
	0x56, 0x5c, 0xef, 0xaf, 0x06, 0xec, 0xac, 0x4f, 0x05, 0xfa, 0x12, 0xda, 0x29, 0xa7, 0x4c, 0x65,
	0xe8, 0x9e, 0x3c, 0x79, 0xa7, 0x51, 0x72, 0xaf, 0x38, 0x65, 0x58, 0xc5, 0xc9, 0xb7, 0x4c, 0xd9,
	0x32, 0x89, 0x59, 0xa4, 0x16, 0x8d, 0xee, 0x3f, 0x68, 0x6a, 0x20, 0xd7, 0xcd, 0x01, 0x58, 0xa4,
	0x14, 0x3c, 0xa2, 0x6c, 0xce, 0x04, 0x53, 0x97, 0x32, 0x30, 0x48, 0xca, 0x57, 0x8c, 0x5c, 0x13,
	0x72, 0x9a, 0xe5, 0x26, 0xd0, 0x6b, 0xaa, 0x23, 0x61, 0x48, 0x7b, 0xe7, 0xd0, 0x96, 0x89, 0xd0,
	0x23, 0xb0, 0xaf, 0x86, 0x7e, 0xf0, 0xe0, 0x57, 0xdb, 0x05, 0x13, 0x07, 0x9e, 0x1f, 0x0d, 0x07,
	0x97, 0xdf, 0xdb, 0x0d, 0xdd, 0x7c, 0xcf, 0x8f, 0xbe, 0xc5, 0xe1, 0x24, 0xb0, 0x9b, 0xbd, 0xdf,
	0x9b, 0x60, 0x3f, 0x9c, 0x55, 0xd9, 0xb8, 0x44, 0x96, 0x57, 0x8d, 0x8e, 0x06, 0xf2, 0x86, 0x29,
	0x89, 0x23, 0x42, 0x69, 0xce, 0x8a, 0xa2, 0x2e, 0x21, 0x25, 0xb1, 0xa7, 0x19, 0xb9, 0x9d, 0x8b,
	0x72, 0x9a, 0x31, 0x21, 0xef, 0xd8, 0xd2, 0xdb, 0x59, 0x13, 0x21, 0x45, 0xd7, 0x80, 0x16, 0x79,
	0x92, 0xca, 0x47, 0xb9, 0x3c, 0x5d, 0x89, 0xb4, 0xd5, 0x1b, 0xff, 0x64, 0x63, 0x3b, 0x47, 0x3a,
	0xa4, 0xca, 0x80, 0xed, 0x4a, 0xe2, 0xe6, 0xb4, 0xce, 0xb9, 0x2e, 0x7b, 0xb6, 0x92, 0xdd, 0xfa,
	0x8f, 0xb2, 0x67, 0x15, 0xd3, 0x2b, 0xa1, 0xfb, 0xa6, 0x0f, 0x72, 0x60, 0xbb, 0x56, 0xd7, 0x5d,
	0xa9, 0x21, 0x0a, 0xa1, 0x2b, 0xd7, 0xb7, 0xe0, 0x91, 0xfc, 0x93, 0x11, 0xa1, 0x5a, 0x63, 0x9d,
	0x7c, 0xb8, 0x31, 0xfd, 0x30, 0x63, 0x13, 0x3e, 0xcc, 0xd8, 0x80, 0x08, 0x6c, 0xf1, 0xd7, 0xa0,
	0xf7, 0x13, 0x58, 0x6b, 0xb6, 0x7f, 0xc8, 0xe9, 0x01, 0x24, 0x8b, 0x68, 0xc9, 0xf2, 0x42, 0x4e,
	0x70, 0x53, 0x0d, 0xe5, 0xe6, 0xd5, 0x1f, 0x2e, 0x6e, 0xb4, 0x27, 0x36, 0x93, 0xfa, 0xf8, 0xe4,
	0x1c, 0xcc, 0x15, 0x8f, 0xf6, 0x61, 0x2f, 0x1c, 0x45, 0x37, 0x01, 0x96, 0x8f, 0xfb, 0xc1, 0x04,
	0x19, 0xd0, 0x0e, 0x47, 0x37, 0xa7, 0x76, 0xa3, 0x3a, 0x9d, 0xd9, 0xcd, 0x17, 0xc1, 0x0f, 0x17,
	0xb7, 0x89, 0x78, 0x55, 0x4e, 0x65, 0x9a, 0xbe, 0xce, 0x7b, 0xac, 0x3f, 0x0a, 0x6e, 0xf9, 0xf1,
	0x2d, 0xcb, 0xd4, 0xff, 0xdb, 0xfe, 0x86, 0xaf, 0x85, 0xf3, 0xea, 0x38, 0xed, 0x28, 0xb7, 0xcf,
	0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x56, 0xce, 0xab, 0xa6, 0x57, 0x08, 0x00, 0x00,
}
