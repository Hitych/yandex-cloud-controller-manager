// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/mdb/postgresql/v1/user.proto

package postgresql // import "github.com/yandex-cloud/go-genproto/yandex/cloud/mdb/postgresql/v1"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"
import _ "github.com/yandex-cloud/go-genproto/yandex/cloud/validation"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// A PostgreSQL User resource. For more information, see
// the [Developer's Guide](/docs/mdb/concepts).
type User struct {
	// Name of the PostgreSQL user.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// ID of the PostgreSQL cluster the user belongs to.
	ClusterId string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Set of permissions granted to the user.
	Permissions []*Permission `protobuf:"bytes,3,rep,name=permissions,proto3" json:"permissions,omitempty"`
	// Number of database connections available to the user.
	ConnLimit            int64    `protobuf:"varint,4,opt,name=conn_limit,json=connLimit,proto3" json:"conn_limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_c9fba0f5815d3032, []int{0}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *User) GetPermissions() []*Permission {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func (m *User) GetConnLimit() int64 {
	if m != nil {
		return m.ConnLimit
	}
	return 0
}

type Permission struct {
	// Name of the database that the permission grants access to.
	DatabaseName         string   `protobuf:"bytes,1,opt,name=database_name,json=databaseName,proto3" json:"database_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Permission) Reset()         { *m = Permission{} }
func (m *Permission) String() string { return proto.CompactTextString(m) }
func (*Permission) ProtoMessage()    {}
func (*Permission) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_c9fba0f5815d3032, []int{1}
}
func (m *Permission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Permission.Unmarshal(m, b)
}
func (m *Permission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Permission.Marshal(b, m, deterministic)
}
func (dst *Permission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Permission.Merge(dst, src)
}
func (m *Permission) XXX_Size() int {
	return xxx_messageInfo_Permission.Size(m)
}
func (m *Permission) XXX_DiscardUnknown() {
	xxx_messageInfo_Permission.DiscardUnknown(m)
}

var xxx_messageInfo_Permission proto.InternalMessageInfo

func (m *Permission) GetDatabaseName() string {
	if m != nil {
		return m.DatabaseName
	}
	return ""
}

type UserSpec struct {
	// Name of the PostgreSQL user.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Password of the PostgreSQL user.
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// Set of permissions to grant to the user.
	Permissions []*Permission `protobuf:"bytes,3,rep,name=permissions,proto3" json:"permissions,omitempty"`
	// Number of database connections that should be available to the user.
	ConnLimit            *wrappers.Int64Value `protobuf:"bytes,4,opt,name=conn_limit,json=connLimit,proto3" json:"conn_limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UserSpec) Reset()         { *m = UserSpec{} }
func (m *UserSpec) String() string { return proto.CompactTextString(m) }
func (*UserSpec) ProtoMessage()    {}
func (*UserSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_c9fba0f5815d3032, []int{2}
}
func (m *UserSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSpec.Unmarshal(m, b)
}
func (m *UserSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSpec.Marshal(b, m, deterministic)
}
func (dst *UserSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSpec.Merge(dst, src)
}
func (m *UserSpec) XXX_Size() int {
	return xxx_messageInfo_UserSpec.Size(m)
}
func (m *UserSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSpec.DiscardUnknown(m)
}

var xxx_messageInfo_UserSpec proto.InternalMessageInfo

func (m *UserSpec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserSpec) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UserSpec) GetPermissions() []*Permission {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func (m *UserSpec) GetConnLimit() *wrappers.Int64Value {
	if m != nil {
		return m.ConnLimit
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "yandex.cloud.mdb.postgresql.v1.User")
	proto.RegisterType((*Permission)(nil), "yandex.cloud.mdb.postgresql.v1.Permission")
	proto.RegisterType((*UserSpec)(nil), "yandex.cloud.mdb.postgresql.v1.UserSpec")
}

func init() {
	proto.RegisterFile("yandex/cloud/mdb/postgresql/v1/user.proto", fileDescriptor_user_c9fba0f5815d3032)
}

var fileDescriptor_user_c9fba0f5815d3032 = []byte{
	// 407 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x52, 0x4d, 0xab, 0xd3, 0x40,
	0x14, 0x25, 0x36, 0x4a, 0x3b, 0xb5, 0x9b, 0xac, 0xc2, 0x93, 0x3e, 0x4a, 0xdd, 0xf4, 0x29, 0x99,
	0x79, 0xd3, 0x4a, 0xa9, 0x88, 0x82, 0xc1, 0x4d, 0xa1, 0x7e, 0x10, 0xd1, 0x45, 0x45, 0xc2, 0x24,
	0x33, 0xc6, 0x81, 0x64, 0x26, 0xce, 0x4c, 0x5a, 0xf5, 0x27, 0xf4, 0x87, 0xf8, 0x57, 0xda, 0x9f,
	0xe2, 0xda, 0xa5, 0xb8, 0x90, 0x24, 0xfd, 0x88, 0x08, 0x5d, 0xbd, 0x5d, 0x72, 0xee, 0x39, 0x73,
	0xef, 0x39, 0xf7, 0x82, 0xab, 0x6f, 0x44, 0x50, 0xf6, 0x15, 0xc5, 0xa9, 0x2c, 0x28, 0xca, 0x68,
	0x84, 0x72, 0xa9, 0x4d, 0xa2, 0x98, 0xfe, 0x92, 0xa2, 0x15, 0x46, 0x85, 0x66, 0x0a, 0xe6, 0x4a,
	0x1a, 0xe9, 0x5c, 0xd6, 0x54, 0x58, 0x51, 0x61, 0x46, 0x23, 0x78, 0xa2, 0xc2, 0x15, 0xbe, 0xb8,
	0x4c, 0xa4, 0x4c, 0x52, 0x86, 0x2a, 0x76, 0x54, 0x7c, 0x42, 0x6b, 0x45, 0xf2, 0x9c, 0x29, 0x5d,
	0xeb, 0x2f, 0xfa, 0xff, 0xb4, 0x5a, 0x91, 0x94, 0x53, 0x62, 0xb8, 0x14, 0x75, 0x79, 0xf8, 0xc3,
	0x02, 0xf6, 0x3b, 0xcd, 0x94, 0xe3, 0x00, 0x5b, 0x90, 0x8c, 0xb9, 0xd6, 0xc0, 0x1a, 0x75, 0x82,
	0xea, 0xdb, 0xe9, 0x03, 0x10, 0xa7, 0x85, 0x36, 0x4c, 0x85, 0x9c, 0xba, 0xb7, 0xaa, 0x4a, 0x67,
	0x8f, 0xcc, 0xa9, 0xb3, 0x00, 0xdd, 0x9c, 0xa9, 0x8c, 0x6b, 0xcd, 0xa5, 0xd0, 0x6e, 0x6b, 0xd0,
	0x1a, 0x75, 0xc7, 0x0f, 0xe0, 0xf9, 0x81, 0xe1, 0x9b, 0xa3, 0x24, 0x68, 0xca, 0xab, 0x66, 0x52,
	0x88, 0x30, 0xe5, 0x19, 0x37, 0xae, 0x3d, 0xb0, 0x46, 0xad, 0xa0, 0x53, 0x22, 0x8b, 0x12, 0x18,
	0x62, 0x00, 0x4e, 0x4a, 0xe7, 0x3e, 0xe8, 0x51, 0x62, 0x48, 0x44, 0x34, 0x0b, 0x1b, 0x63, 0xdf,
	0x3d, 0x80, 0xaf, 0x48, 0xc6, 0x86, 0x7f, 0x2c, 0xd0, 0x2e, 0xbd, 0xbd, 0xcd, 0x59, 0xec, 0xe0,
	0xa6, 0x3f, 0xbf, 0xff, 0x73, 0x8b, 0xad, 0x5f, 0x5b, 0xdc, 0xfb, 0x40, 0xbc, 0xef, 0xcf, 0xbd,
	0xe5, 0xb5, 0xf7, 0x38, 0xfc, 0xf8, 0x70, 0xb3, 0xc3, 0x36, 0xf6, 0xa6, 0x93, 0xbd, 0xfd, 0x2b,
	0xd0, 0xce, 0x89, 0xd6, 0x6b, 0xa9, 0xf6, 0xe6, 0xfd, 0x5e, 0x29, 0xdb, 0xec, 0xf0, 0xed, 0x99,
	0x87, 0xc7, 0xb3, 0xe0, 0x58, 0xbe, 0xe1, 0x28, 0x5e, 0xfc, 0x17, 0x45, 0x77, 0x7c, 0x0f, 0xd6,
	0x8b, 0x86, 0x87, 0x45, 0xc3, 0xb9, 0x30, 0xd3, 0x47, 0xef, 0x49, 0x5a, 0x30, 0xbf, 0xfd, 0x7b,
	0x8b, 0xed, 0x67, 0x4f, 0xf1, 0x75, 0x23, 0x31, 0xff, 0xf5, 0xf2, 0x65, 0xc2, 0xcd, 0xe7, 0x22,
	0x82, 0xb1, 0xcc, 0x50, 0x3d, 0x8a, 0x57, 0x9f, 0x41, 0x22, 0xbd, 0x84, 0x89, 0xea, 0x25, 0x74,
	0xfe, 0x14, 0x9f, 0x9c, 0xfe, 0xa2, 0x3b, 0x95, 0x60, 0xf2, 0x37, 0x00, 0x00, 0xff, 0xff, 0x95,
	0x8c, 0x32, 0x85, 0xbe, 0x02, 0x00, 0x00,
}
